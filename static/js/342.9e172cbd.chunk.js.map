{"version":3,"file":"static/js/342.9e172cbd.chunk.js","mappings":"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","sources":["components/admin/AdminInput.js","components/admin/ModalWindow.js","components/admin/Upload.js","components/admin/UploadImages.js","components/admin/AddVisionForm.js","components/admin/VisionAdmin.js","components/ui/Confirm.js","components/ui/DisplayImage.js","components/ui/EmptyData.js","components/ui/ErrorComponent.js","components/ui/SubmitBtn.js","helpers/checkLanguages.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction AdminInput({\r\n  type,\r\n  name,\r\n  id,\r\n  label,\r\n  defaultValue,\r\n  classes = \"\",\r\n  placeholder,\r\n  required = false,\r\n  sterilizer,\r\n  disabled,\r\n}) {\r\n  const [value, setValue] = useState(defaultValue ? defaultValue : \"\");\r\n\r\n  function hanldeChangeInput(e) {\r\n    if (sterilizer) {\r\n      const condition = sterilizer?.(e.target.value);\r\n      if (condition) {\r\n        setValue(e.target.value);\r\n      }\r\n    } else {\r\n      setValue(e.target.value);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={id}>{label}</label>\r\n      {type !== \"textarea\" ? (\r\n        <input\r\n          disabled={disabled}\r\n          type={type}\r\n          id={id}\r\n          placeholder={placeholder}\r\n          name={name}\r\n          value={value}\r\n          onChange={hanldeChangeInput}\r\n          className={classes}\r\n          required={required}\r\n        />\r\n      ) : (\r\n        <textarea\r\n          disabled={disabled}\r\n          id={id}\r\n          placeholder={placeholder}\r\n          name={name}\r\n          value={value}\r\n          onChange={hanldeChangeInput}\r\n          className={classes}\r\n          required={required}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminInput;\r\n","import { CgClose } from \"react-icons/cg\";\r\nimport { useOutsideClick } from \"../../hooks/useOutsideClick\";\r\n\r\nfunction ModalWindow({ title, children, onClose, classes }) {\r\n  const ref = useOutsideClick((e) => {\r\n    if (e.target.closest(\".Toastify__toast-container\")) return;\r\n\r\n    onClose?.();\r\n  });\r\n\r\n  return (\r\n    <div className=\"fixed w-full h-full bg-slate-200 bg-opacity-35 top-0 left-0 right-0 bottom-0 flex z-10 justify-center items-center\">\r\n      <div\r\n        ref={ref}\r\n        className={`bg-white p-4 rounded w-full max-w-2xl overflow-auto h-fit max-h-[80%] ${\r\n          classes ? classes : \"\"\r\n        }`}\r\n      >\r\n        <h2 className=\"font-bold text-lg\">{title}</h2>\r\n        <div\r\n          className=\"w-fit ml-auto mb-2 text-2xl hover:text-red-600 cursor-pointer\"\r\n          onClick={() => onClose?.()}\r\n        >\r\n          <CgClose />\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalWindow;\r\n","function Upload({ buttonTitle, title, hanldeClick }) {\r\n  return (\r\n    <div className=\"bg-white py-2 px-4 flex justify-between items-center\">\r\n      <h2 className=\"font-bold text-lg\">{title}</h2>\r\n      <button\r\n        className=\"border-2 bg-primary-700 text-white transition-all py-1 px-3 rounded-full \"\r\n        onClick={() => hanldeClick?.()}\r\n      >\r\n        {buttonTitle}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n","import { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport { toast } from \"react-toastify\";\r\nimport DisplayImage from \"../ui/DisplayImage\";\r\n\r\nfunction UploadImages({ modifyImgs, label, error, disabled, multiple = true }) {\r\n  const { t } = useTranslation();\r\n  const [data, setData] = useState([]);\r\n  const [openFullScreenImage, setOpenFullScreenImage] = useState(false);\r\n  const [fullScreenImage, setFullScreenImage] = useState(\"\");\r\n  const [dragableClass, setDragableClass] = useState(\"\");\r\n\r\n  function handleSetImages(e, imgs) {\r\n    if (disabled) return;\r\n\r\n    if (imgs) {\r\n      imgs.forEach((file) => {\r\n        // Ignore big image\r\n        if (file.size > 5 * 1024 * 1024) {\r\n          toast.error(error);\r\n          return;\r\n        }\r\n        modifyImgs?.(file, \"ADD\", null);\r\n        const reader = new FileReader();\r\n        reader.onload = function (event) {\r\n          const previewImageUrl = event.target.result;\r\n          if(multiple)\r\n            setData((previousImgs) => [...previousImgs, previewImageUrl]);\r\n          else\r\n            setData([previewImageUrl])\r\n        };\r\n        reader.readAsDataURL(file); // Read file as data URL\r\n      });\r\n    } else if (e) {\r\n      [...e.target.files].forEach((file) => {\r\n        // Ignore big image\r\n        if (file.size > 5 * 1024 * 1024) {\r\n          toast.error(error);\r\n          return;\r\n        }\r\n        modifyImgs?.(file, \"ADD\", null);\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = function (event) {\r\n          const previewImageUrl = event.target.result;\r\n          if(multiple)\r\n            setData((previousImgs) => [...previousImgs, previewImageUrl]);\r\n          else\r\n            setData([previewImageUrl])\r\n        };\r\n        reader.readAsDataURL(file); // Read file as data URL\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleDeleteProductImage(index) {\r\n    if (disabled) return;\r\n\r\n    if (multiple)\r\n      setData((previouseImgs) => previouseImgs.filter((_, i) => i !== index));\r\n    else\r\n      setData([])\r\n    modifyImgs?.(null, \"DELETE\", index);\r\n  }\r\n\r\n  function handleDragOver(e) {\r\n    if (disabled) return;\r\n\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    setDragableClass(\"border-[4px] border-dashed border-stone-700\");\r\n  }\r\n\r\n  function handleDragLeave(e) {\r\n    if (disabled) return;\r\n\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    setDragableClass(\"\");\r\n  }\r\n\r\n  function handleDropFiles(e) {\r\n    if (disabled) return;\r\n\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    let files = [];\r\n    // Loop through the files and pick the first image if not multiple\r\n    for (const file of e.dataTransfer.files) {\r\n      if (/^(image)/.test(file.type)) {\r\n        files.push(file);\r\n        if (!multiple) break; // Exit the loop after finding the first image\r\n      }\r\n    }\r\n    // Only images\r\n    // const imgs = files.filter((file) => /^(image)/.test(file.type));\r\n    handleSetImages(null, files);\r\n    setDragableClass(\"\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"productImage\" className=\"mt-3\">\r\n        {label}\r\n      </label>\r\n      <label\r\n        htmlFor=\"uploadImageInput\"\r\n        className={dragableClass}\r\n        onDragOverCapture={handleDragOver}\r\n        onDragLeaveCapture={handleDragLeave}\r\n        onDragEnterCapture={handleDragOver}\r\n        onDropCapture={handleDropFiles}\r\n      >\r\n        <div className=\"p-2 bg-slate-100 border rounded h-32 w-full flex justify-center items-center cursor-pointer\">\r\n          <div className=\"text-slate-500 flex justify-center items-center flex-col gap-2\">\r\n            <span className=\"text-4xl\">\r\n              <FaCloudUploadAlt />\r\n            </span>\r\n            <p className=\"text-sm\">{t(\"forms.admin.imagesField.label\")}</p>\r\n            <input\r\n              disabled={disabled}\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              id=\"uploadImageInput\"\r\n              className=\"hidden\"\r\n              onChange={handleSetImages}\r\n              multiple={multiple}\r\n            />\r\n          </div>\r\n        </div>\r\n      </label>\r\n      <div>\r\n        {data[0] ? (\r\n          <div className=\"flex items-center gap-2 w-full overflow-y-auto max-h-[20rem] flex-wrap\">\r\n            {data[0] &&\r\n              data.map((url, index) => {\r\n                if (url)\r\n                  return (\r\n                    <div\r\n                      key={url}\r\n                      className=\"relative group basis-[calc(50%-0.5rem)]\"\r\n                    >\r\n                      <img\r\n                        src={url}\r\n                        alt=\"product\"\r\n                        className=\"bg-slate-100 object-cover border-[3px] border-stone-500 cursor-pointer\"\r\n                        onClick={() => {\r\n                          setOpenFullScreenImage(true);\r\n                          setFullScreenImage(url);\r\n                        }}\r\n                      />\r\n\r\n                      <div\r\n                        className=\"absolute bottom-0 right-0 p-1 text-white bg-red-600 rounded-full hidden group-hover:block cursor-pointer\"\r\n                        onClick={() => handleDeleteProductImage?.(index)}\r\n                      >\r\n                        <MdDelete />\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                else\r\n                  return (\r\n                    <div\r\n                      key={index}\r\n                      className=\"relative group basis-[calc(50%-0.5rem)] h-[10rem] bg-gray-500 animate-pulse\"\r\n                    />\r\n                  );\r\n              })}\r\n          </div>\r\n        ) : (\r\n          <p className=\"text-red-600 text-xs\">{error}</p>\r\n        )}\r\n      </div>\r\n\r\n      {/***display image full screen */}\r\n      {openFullScreenImage && (\r\n        <DisplayImage\r\n          onClose={() => setOpenFullScreenImage(false)}\r\n          imgUrl={fullScreenImage}\r\n          classes=\"mt-[3rem]\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UploadImages;\r\n","import { useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { toast } from \"react-toastify\";\r\nimport SummaryApi from \"../../common\";\r\nimport {\r\n  isValidArabicChars,\r\n  isValidEnglishChars,\r\n  isValidFrenchChars,\r\n} from \"../../helpers/checkLanguages\";\r\nimport SubmitBtn from \"../ui/SubmitBtn\";\r\nimport AdminInput from \"./AdminInput\";\r\nimport UploadImages from \"./UploadImages\";\r\n\r\nfunction AddVisionForm({ onSuccess }) {\r\n  const { t } = useTranslation();\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const imgRef = useRef(null);\r\n\r\n  async function uploadVisionImage() {\r\n    toast.warn(t(\"messages.warnUploadVisionImage\"));\r\n    try {\r\n      setIsUploading(true);\r\n      const formData = new FormData();\r\n      formData.append(\"visionImg\", imgRef.current);\r\n\r\n      const req = await fetch(SummaryApi.uploadVisionImage.url, {\r\n        method: SummaryApi.uploadVisionImage.method,\r\n        body: formData,\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const res = await req.json();\r\n      if (res.success) {\r\n        return res.imgPath;\r\n      } else {\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      toast.error(t(\"messages.errVisionUploadImage\"));\r\n    }\r\n  }\r\n\r\n  async function uploadVisionData(data) {\r\n    try {\r\n      const imgPath = await uploadVisionImage();\r\n      data.image = imgPath;\r\n\r\n      const req = await fetch(SummaryApi.uploadVision.url, {\r\n        method: SummaryApi.uploadVision.method,\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      const res = await req.json();\r\n\r\n      if (res.success) {\r\n        toast.success(t(\"messages.successAddVision\"));\r\n        onSuccess();\r\n      } else {\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      toast.error(t(\"messages.errUploadingVision\"));\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const finallData = {\r\n      title: [],\r\n      description: [],\r\n      image: \"\",\r\n    };\r\n\r\n    formData.entries().forEach((element) => {\r\n      if (element[0].startsWith(\"visionTitle\")) {\r\n        finallData.title.push({\r\n          language: element[0].slice(11).toLowerCase(),\r\n          text: element[1],\r\n        });\r\n      }\r\n      if (element[0].startsWith(\"description\")) {\r\n        finallData.description.push({\r\n          language: element[0].slice(11).toLowerCase(),\r\n          text: element[1],\r\n        });\r\n      }\r\n    });\r\n\r\n    uploadVisionData(finallData);\r\n  }\r\n\r\n  function modifyImgs(file, operation, index) {\r\n    switch (operation) {\r\n      case \"ADD\":\r\n        imgRef.current = file;\r\n        break;\r\n\r\n      case \"DELETE\":\r\n        imgRef.current = null;\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className=\"pt-6 flex flex-col gap-2\" onSubmit={handleSubmit}>\r\n      <AdminInput\r\n        type=\"text\"\r\n        name=\"visionTitleEN\"\r\n        id=\"visionTitleEN\"\r\n        label={t(\"forms.admin.interpolationFields.title.label\", {\r\n          section: t(\"forms.admin.interpolationKeyword.vision\"),\r\n          lang: t(\"forms.admin.interpolationKeyword.en\"),\r\n        })}\r\n        placeholder={t(\"forms.admin.interpolationFields.title.placeholder\", {\r\n          section: t(\"forms.admin.interpolationKeyword.vision\"),\r\n          lang: t(\"forms.admin.interpolationKeyword.en\"),\r\n        })}\r\n        classes=\"p-2 bg-slate-100 border rounded disabled:cursor-not-allowed\"\r\n        disabled={isUploading}\r\n        required={true}\r\n        sterilizer={(val) => {\r\n          if (!isValidEnglishChars(val, t)) {\r\n            return false;\r\n          }\r\n          if (val.length >= 100) {\r\n            toast.warn(t(\"messages.errTitleLong\"));\r\n            return false;\r\n          }\r\n          return true;\r\n        }}\r\n      />\r\n\r\n      <AdminInput\r\n        type=\"text\"\r\n        name=\"visionTitleAR\"\r\n        id=\"visionTitleAR\"\r\n        label={t(\"forms.admin.interpolationFields.title.label\", {\r\n          section: t(\"forms.admin.interpolationKeyword.vision\"),\r\n          lang: t(\"forms.admin.interpolationKeyword.ar\"),\r\n        })}\r\n        placeholder={t(\"forms.admin.interpolationFields.title.placeholder\", {\r\n          section: t(\"forms.admin.interpolationKeyword.vision\"),\r\n          lang: t(\"forms.admin.interpolationKeyword.ar\"),\r\n        })}\r\n        classes=\"p-2 bg-slate-100 border rounded disabled:cursor-not-allowed\"\r\n        disabled={isUploading}\r\n        required={true}\r\n        sterilizer={(val) => {\r\n          if (!isValidArabicChars(val, t)) {\r\n            return false;\r\n          }\r\n          if (val.length >= 100) {\r\n            toast.warn(t(\"messages.errTitleLong\"));\r\n            return false;\r\n          }\r\n          return true;\r\n        }}\r\n      />\r\n\r\n      <AdminInput\r\n        type=\"text\"\r\n        name=\"visionTitleFR\"\r\n        id=\"visionTitleFR\"\r\n        label={t(\"forms.admin.interpolationFields.title.label\", {\r\n          section: t(\"forms.admin.interpolationKeyword.vision\"),\r\n          lang: t(\"forms.admin.interpolationKeyword.fr\"),\r\n        })}\r\n        placeholder={t(\"forms.admin.interpolationFields.title.placeholder\", {\r\n          section: t(\"forms.admin.interpolationKeyword.vision\"),\r\n          lang: t(\"forms.admin.interpolationKeyword.fr\"),\r\n        })}\r\n        classes=\"p-2 bg-slate-100 border rounded disabled:cursor-not-allowed\"\r\n        disabled={isUploading}\r\n        required={true}\r\n        sterilizer={(val) => {\r\n          if (!isValidFrenchChars(val, t)) {\r\n            return false;\r\n          }\r\n          if (val.length >= 100) {\r\n            toast.warn(t(\"messages.errTitleLong\"));\r\n            return false;\r\n          }\r\n          return true;\r\n        }}\r\n      />\r\n\r\n      <AdminInput\r\n        type=\"textarea\"\r\n        id=\"descriptionEN\"\r\n        label={t(\"forms.admin.interpolationFields.description.label\", {\r\n          section: t(\"forms.admin.interpolationKeyword.vision\"),\r\n          lang: t(\"forms.admin.interpolationKeyword.en\"),\r\n        })}\r\n        placeholder={t(\r\n          \"forms.admin.interpolationFields.description.placeholder\",\r\n          {\r\n            section: t(\"forms.admin.interpolationKeyword.vision\"),\r\n            lang: t(\"forms.admin.interpolationKeyword.en\"),\r\n          }\r\n        )}\r\n        name=\"descriptionEN\"\r\n        classes=\"h-28 bg-slate-100 border resize-none p-1 disabled:cursor-not-allowed\"\r\n        rows={3}\r\n        disabled={isUploading}\r\n        required={true}\r\n        sterilizer={(val) => {\r\n          if (!isValidEnglishChars(val, t)) {\r\n            return false;\r\n          }\r\n          return val.length <= 500;\r\n        }}\r\n      />\r\n\r\n      <AdminInput\r\n        type=\"textarea\"\r\n        id=\"descriptionAR\"\r\n        label={t(\"forms.admin.interpolationFields.description.label\", {\r\n          section: t(\"forms.admin.interpolationKeyword.vision\"),\r\n          lang: t(\"forms.admin.interpolationKeyword.ar\"),\r\n        })}\r\n        placeholder={t(\r\n          \"forms.admin.interpolationFields.description.placeholder\",\r\n          {\r\n            section: t(\"forms.admin.interpolationKeyword.vision\"),\r\n            lang: t(\"forms.admin.interpolationKeyword.ar\"),\r\n          }\r\n        )}\r\n        name=\"descriptionAR\"\r\n        classes=\"h-28 bg-slate-100 border resize-none p-1 disabled:cursor-not-allowed\"\r\n        rows={3}\r\n        disabled={isUploading}\r\n        required={true}\r\n        sterilizer={(val) => {\r\n          if (!isValidArabicChars(val, t)) {\r\n            return false;\r\n          }\r\n          return val.length <= 500;\r\n        }}\r\n      />\r\n\r\n      <AdminInput\r\n        type=\"textarea\"\r\n        id=\"descriptionFR\"\r\n        label={t(\"forms.admin.interpolationFields.description.label\", {\r\n          section: t(\"forms.admin.interpolationKeyword.vision\"),\r\n          lang: t(\"forms.admin.interpolationKeyword.fr\"),\r\n        })}\r\n        placeholder={t(\r\n          \"forms.admin.interpolationFields.description.placeholder\",\r\n          {\r\n            section: t(\"forms.admin.interpolationKeyword.vision\"),\r\n            lang: t(\"forms.admin.interpolationKeyword.fr\"),\r\n          }\r\n        )}\r\n        name=\"descriptionFR\"\r\n        classes=\"h-28 bg-slate-100 border resize-none p-1 disabled:cursor-not-allowed\"\r\n        rows={3}\r\n        disabled={isUploading}\r\n        required={true}\r\n        sterilizer={(val) => {\r\n          if (!isValidFrenchChars(val, t)) {\r\n            return false;\r\n          }\r\n          return val.length <= 500;\r\n        }}\r\n      />\r\n\r\n      <UploadImages\r\n        disabled={isUploading}\r\n        error={t(\"messages.errVisionImage\")}\r\n        label={t(\"forms.admin.imgsVisionField.label\")}\r\n        modifyImgs={modifyImgs}\r\n        multiple={false}\r\n      />\r\n\r\n      <SubmitBtn\r\n        title={t(\"forms.admin.uploadVisionBtn\")}\r\n        type=\"primary\"\r\n        classes=\"px-3 pt-2\"\r\n        dis={isUploading}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddVisionForm;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport { RotatingLines } from \"react-loader-spinner\";\r\nimport { toast } from \"react-toastify\";\r\nimport SummaryApi from \"../../common\";\r\nimport Confirm from \"../ui/Confirm\";\r\nimport DisplayImage from \"../ui/DisplayImage\";\r\nimport EmptyData from \"../ui/EmptyData\";\r\nimport ErrorComponent from \"../ui/ErrorComponent\";\r\nimport AddVisionForm from \"./AddVisionForm\";\r\nimport ModalWindow from \"./ModalWindow\";\r\nimport Upload from \"./Upload\";\r\n\r\nfunction VisionAdmin() {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [err, setErr] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [showAddVision, setShowAddVision] = useState(false);\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [showImage, setShowImage] = useState(false);\r\n  const { t } = useTranslation();\r\n\r\n  const visionDelete = useRef(null);\r\n  const visionImage = useRef(null);\r\n\r\n  async function fetchAllVisions() {\r\n    try {\r\n      setIsLoading(true);\r\n      setErr(false);\r\n      const req = await fetch(SummaryApi.getVisionData.url, {\r\n        method: SummaryApi.getVisionData.method,\r\n      });\r\n      const res = await req.json();\r\n\r\n      if (res.success) {\r\n        setData(res.data);\r\n      } else {\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n    } catch (err) {\r\n      setErr(true);\r\n      console.log(err.message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  async function deleteVision() {\r\n    try {\r\n      const req = await fetch(\r\n        `${SummaryApi.deleteVision.url}/${visionDelete.current}`,\r\n        {\r\n          method: SummaryApi.deleteVision.method,\r\n          credentials: \"include\",\r\n        }\r\n      );\r\n\r\n      const res = await req.json();\r\n      if (res.success) {\r\n        toast.success(t(\"messages.successDeleteVision\"));\r\n        fetchAllVisions();\r\n      } else {\r\n        throw new Error(\"Soemthing went wrong\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      toast.error(t(\"messages.errDeleteVision\"));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchAllVisions();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"bg-white pb-4\">\r\n        <div className=\"flex items-center justify-center\">\r\n          <RotatingLines strokeColor=\"#c89329\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (err) {\r\n    return (\r\n      <div className=\"p-4 w-full h-full\">\r\n        <ErrorComponent refetchFunction={fetchAllVisions} disable={isLoading} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white pb-4\">\r\n      <Upload\r\n        buttonTitle={t(\"forms.admin.uploadVisionOpen\")}\r\n        title={t(\"forms.admin.uploadVisionTitle\")}\r\n        hanldeClick={() => setShowAddVision(true)}\r\n      />\r\n      {data.length ? (\r\n        <table className=\"w-full userTable\">\r\n          <thead>\r\n            <tr className=\"bg-primary-700 text-white\">\r\n              <th className=\"p-2\">{t(\"tables.common.titleEN\")}</th>\r\n              <th className=\"p-2\">{t(\"tables.common.titleAR\")}</th>\r\n              <th className=\"p-2\">{t(\"tables.common.titleFR\")}</th>\r\n              <th className=\"p-2\">{t(\"tables.common.descEN\")}</th>\r\n              <th className=\"p-2\">{t(\"tables.common.descAR\")}</th>\r\n              <th className=\"p-2\">{t(\"tables.common.descFR\")}</th>\r\n              <th className=\"p-2\">{t(\"tables.common.image\")}</th>\r\n              <th className=\"p-2\">{t(\"tables.common.action\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((el, index) => {\r\n              return (\r\n                <tr key={el._id}>\r\n                  {el.title.map((item) => (\r\n                    <td key={item._id}>{item.text}</td>\r\n                  ))}\r\n                  {el.description.map((item) => (\r\n                    <td key={item._id}>{item.text}</td>\r\n                  ))}\r\n                  <td>\r\n                    <span\r\n                      className={`${\r\n                        el.image ? \"text-blue-700 cursor-pointer underline\" : \"\"\r\n                      }`}\r\n                      onClick={() => {\r\n                        visionImage.current = el.image;\r\n                        setShowImage(true);\r\n                      }}\r\n                    >\r\n                      {t(\"tables.common.image\")}\r\n                    </span>\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      className=\"bg-red-100 p-2 rounded-full cursor-pointer transition-colors hover:bg-red-500 hover:text-white\"\r\n                      onClick={() => {\r\n                        visionDelete.current = el._id;\r\n                        setShowConfirm(true);\r\n                      }}\r\n                    >\r\n                      <MdDelete />\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <EmptyData />\r\n      )}\r\n\r\n      {showAddVision && (\r\n        <ModalWindow onClose={() => setShowAddVision(false)}>\r\n          <AddVisionForm\r\n            onSuccess={() => {\r\n              setShowAddVision(false);\r\n              fetchAllVisions();\r\n            }}\r\n          />\r\n        </ModalWindow>\r\n      )}\r\n\r\n      {showConfirm && (\r\n        <Confirm\r\n          about={t(\"messages.confirmDeleteVision\")}\r\n          onClose={() => {\r\n            visionDelete.current = \"\";\r\n            setShowConfirm(false);\r\n          }}\r\n          onConfirm={() => {\r\n            deleteVision();\r\n            setShowConfirm(false);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {showImage &&\r\n        createPortal(\r\n          <DisplayImage\r\n            onClose={() => {\r\n              setShowImage(false);\r\n              visionImage.current = null;\r\n            }}\r\n            imgUrl={visionImage.current}\r\n          />,\r\n          document.body\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default VisionAdmin;\r\n","import { createPortal } from \"react-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { CgClose } from \"react-icons/cg\";\r\nimport { useOutsideClick } from \"../../hooks/useOutsideClick\";\r\nimport SubmitBtn from \"./SubmitBtn\";\r\n\r\nfunction Confirm({ about, onConfirm, onClose, moreDetails = true, children }) {\r\n  const { t } = useTranslation();\r\n  const eleRef = useOutsideClick(() => {\r\n    onClose?.();\r\n  });\r\n\r\n  return createPortal(\r\n    <div className=\"fixed inset-0 flex justify-center items-center z-50 backdrop-brightness-75\">\r\n      <div\r\n        className=\"bg-white shadow-lg rounded max-w-5xl mx-auto p-4 overflow-auto\"\r\n        ref={eleRef}\r\n      >\r\n        <div\r\n          className=\"w-fit ml-auto text-2xl hover:text-red-600 cursor-pointer\"\r\n          onClick={() => onClose?.()}\r\n        >\r\n          <CgClose />\r\n        </div>\r\n\r\n        <div className=\"flex justify-center gap-5 flex-col p-4 max-w-[80dvh] max-h-[80dvh] object-cover\">\r\n          <h3 className=\"text-lg font-semibold\">\r\n            {`${t(\"messages.confirmQuestion1\")} ${about} ${\r\n              moreDetails ?t(\"messages.confirmQuestion2\"): \"\"\r\n            }`}\r\n          </h3>\r\n\r\n          {children ? children : null}\r\n\r\n          <div className=\"flex items-center justify-between p-1\">\r\n            <SubmitBtn\r\n              title={t(\"messages.yes\")}\r\n              type=\"danger\"\r\n              handleClick={() => onConfirm?.()}\r\n              classes=\"w-[49%] font-semibold text-lg\"\r\n            />\r\n            <SubmitBtn\r\n              title={t(\"messages.no\")}\r\n              handleClick={() => onClose?.()}\r\n              classes=\"w-[49%] font-semibold text-lg\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n}\r\n\r\nexport default Confirm;\r\n","import React from \"react\";\nimport { CgClose } from \"react-icons/cg\";\nimport { useOutsideClick } from \"../../hooks/useOutsideClick\";\n\nconst DisplayImage = ({ imgUrl, onClose, classes = \"\" }) => {\n  const eleRef = useOutsideClick((e) => {\n    onClose?.();\n  });\n  return (\n    <div\n      className={`fixed inset-0 flex justify-center items-center z-50 backdrop-brightness-75 ${\n        classes !== \"\" ? classes : \"\"\n      }`}\n    >\n      <div\n        className=\"bg-white shadow-lg rounded max-w-5xl mx-auto p-4 overflow-auto\"\n        ref={eleRef}\n      >\n        <div\n          className=\"w-fit ml-auto text-2xl hover:text-red-600 cursor-pointer\"\n          onClick={onClose}\n        >\n          <CgClose />\n        </div>\n\n        <div className=\"flex justify-center p-4 max-w-[80dvh] max-h-[80dvh] object-cover\">\n          <img src={imgUrl} alt=\"img\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DisplayImage;\n","import { useTranslation } from \"react-i18next\";\r\n\r\nfunction EmptyData() {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <p className=\"w-[80%] mx-auto my-2 rounded-lg p-4 text-xl bg-[var(--primary-color-200)] text-[var(--primary-color-1100)]\">\r\n      {t(\"messages.warnNoData\")}\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default EmptyData;\r\n","import { useTranslation } from \"react-i18next\";\r\nimport { FaTriangleExclamation } from \"react-icons/fa6\";\r\n\r\nfunction ErrorComponent({ refetchFunction, disable }) {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <div className=\"bg-red-200 rounded-lg p-3\">\r\n      <div className=\"bg-gradient-to-bl mb-3 flex items-center flex-wrap gap-4\">\r\n        <p className=\"text-2xl text-red-500 \">\r\n          {t(\"messages.genericErr.title\")}\r\n        </p>\r\n        <FaTriangleExclamation className=\"text-4xl text-red-500\" />\r\n      </div>\r\n\r\n      {refetchFunction ? (\r\n        <p\r\n          className={`text-red-500 underline transition-colors cursor-pointer hover:text-red-800 ${\r\n            disable ? \"pointer-events-none cursor-not-allowed\" : \"\"\r\n          }`}\r\n          onClick={() => refetchFunction?.()}\r\n        >\r\n          {t(\"messages.genericErr.btnTitle\")}\r\n        </p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorComponent;\r\n","function SubmitBtn({ type = \"primary\", title, dis, classes, handleClick }) {\r\n  let colorClasses = \"\";\r\n  switch (type) {\r\n    case \"danger\":\r\n      colorClasses = \"bg-red-500 hover:bg-red-600\";\r\n      break;\r\n    default:\r\n      colorClasses = \"bg-[var(--primary-color-900)] hover:bg-[var(--primary-color-1100)]\";\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className={`text-slate-50 border-none outline-none rounded-lg p-2 transition-colors disabled:cursor-not-allowed ${colorClasses} ${classes}`}\r\n      onClick={(e) => handleClick?.(e)}\r\n      disabled={dis}\r\n    >\r\n      {title}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default SubmitBtn;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport function isValidEnglishChars(val, t) {\r\n  if (!/^[a-zA-Z\\d\\s.,'\";]+$/.test(val) & (val !== \"\")) {\r\n    toast.warn(t(\"messages.errOnlyEnglish\"));\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function isValidArabicChars(val, t) {\r\n  // See the not !, match anything except arabic, nubmers and whitespace chars\r\n  // empty string => first is false -> 0 and empty string -> 1 then 0. && willn't work\r\n  if (!/^[\\u0600-\\u06FF\\s\\d،.,'\";]+$/.test(val) & (val !== \"\")) {\r\n    toast.warn(t(\"messages.errOnlyArabic\"));\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function isValidFrenchChars(val, t) {\r\n  if (!/^[A-Za-zÀ-ÿ\\s\\d'.,'\";]+$/.test(val) & (val !== \"\")) {\r\n    toast.warn(t(\"messages.errOnlyFrench\"));\r\n    return false;\r\n  }\r\n  return true;\r\n}"],"names":["_ref","type","name","id","label","defaultValue","classes","placeholder","required","sterilizer","disabled","value","setValue","useState","hanldeChangeInput","e","target","_jsxs","_Fragment","children","_jsx","htmlFor","onChange","className","title","onClose","ref","useOutsideClick","closest","concat","onClick","CgClose","buttonTitle","hanldeClick","modifyImgs","error","multiple","t","useTranslation","data","setData","openFullScreenImage","setOpenFullScreenImage","fullScreenImage","setFullScreenImage","dragableClass","setDragableClass","handleSetImages","imgs","forEach","file","size","toast","reader","FileReader","onload","event","previewImageUrl","result","previousImgs","readAsDataURL","files","handleDeleteProductImage","index","previouseImgs","filter","_","i","handleDragOver","stopPropagation","preventDefault","onDragOverCapture","onDragLeaveCapture","onDragEnterCapture","onDropCapture","dataTransfer","test","push","FaCloudUploadAlt","accept","map","url","src","alt","MdDelete","DisplayImage","imgUrl","onSuccess","isUploading","setIsUploading","imgRef","useRef","async","uploadVisionData","imgPath","warn","formData","FormData","append","current","req","fetch","SummaryApi","uploadVisionImage","method","body","credentials","res","json","success","Error","err","console","log","message","image","uploadVision","headers","JSON","stringify","onSubmit","finallData","description","entries","element","startsWith","language","slice","toLowerCase","text","AdminInput","section","lang","val","isValidEnglishChars","length","isValidArabicChars","isValidFrenchChars","rows","UploadImages","operation","SubmitBtn","dis","isLoading","setIsLoading","setErr","showAddVision","setShowAddVision","showConfirm","setShowConfirm","showImage","setShowImage","visionDelete","visionImage","fetchAllVisions","getVisionData","useEffect","RotatingLines","strokeColor","ErrorComponent","refetchFunction","disable","Upload","el","item","_id","EmptyData","ModalWindow","AddVisionForm","Confirm","about","onConfirm","deleteVision","createPortal","document","moreDetails","eleRef","handleClick","FaTriangleExclamation","colorClasses"],"sourceRoot":""}