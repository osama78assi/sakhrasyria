{"version":3,"file":"static/js/235.4de97389.chunk.js","mappings":"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","sources":["components/admin/AdminInput.js","components/admin/ModalWindow.js","components/admin/AddSliderForm.js","components/admin/SliderAdmin.js","components/admin/Upload.js","components/admin/UploadImages.js","components/ui/Confirm.js","components/ui/DisplayImage.js","components/ui/EmptyData.js","components/ui/ErrorComponent.js","components/ui/SubmitBtn.js","helpers/checkLanguages.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction AdminInput({\r\n  type,\r\n  name,\r\n  id,\r\n  label,\r\n  defaultValue,\r\n  classes = \"\",\r\n  placeholder,\r\n  required = false,\r\n  sterilizer,\r\n  disabled,\r\n}) {\r\n  const [value, setValue] = useState(defaultValue ? defaultValue : \"\");\r\n\r\n  function hanldeChangeInput(e) {\r\n    if (sterilizer) {\r\n      const condition = sterilizer?.(e.target.value);\r\n      if (condition) {\r\n        setValue(e.target.value);\r\n      }\r\n    } else {\r\n      setValue(e.target.value);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor={id}>{label}</label>\r\n      {type !== \"textarea\" ? (\r\n        <input\r\n          disabled={disabled}\r\n          type={type}\r\n          id={id}\r\n          placeholder={placeholder}\r\n          name={name}\r\n          value={value}\r\n          onChange={hanldeChangeInput}\r\n          className={classes}\r\n          required={required}\r\n        />\r\n      ) : (\r\n        <textarea\r\n          disabled={disabled}\r\n          id={id}\r\n          placeholder={placeholder}\r\n          name={name}\r\n          value={value}\r\n          onChange={hanldeChangeInput}\r\n          className={classes}\r\n          required={required}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminInput;\r\n","import { CgClose } from \"react-icons/cg\";\r\nimport { useOutsideClick } from \"../../hooks/useOutsideClick\";\r\n\r\nfunction ModalWindow({ title, children, onClose, classes }) {\r\n  const ref = useOutsideClick((e) => {\r\n    if (e.target.closest(\".Toastify__toast-container\")) return;\r\n\r\n    onClose?.();\r\n  });\r\n\r\n  return (\r\n    <div className=\"fixed w-full h-full bg-slate-200 bg-opacity-35 top-0 left-0 right-0 bottom-0 flex z-10 justify-center items-center\">\r\n      <div\r\n        ref={ref}\r\n        className={`bg-white p-4 rounded w-full max-w-2xl overflow-auto h-fit max-h-[80%] ${\r\n          classes ? classes : \"\"\r\n        }`}\r\n      >\r\n        <h2 className=\"font-bold text-lg\">{title}</h2>\r\n        <div\r\n          className=\"w-fit ml-auto mb-2 text-2xl hover:text-red-600 cursor-pointer\"\r\n          onClick={() => onClose?.()}\r\n        >\r\n          <CgClose />\r\n        </div>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ModalWindow;\r\n","import { useRef, useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { toast } from \"react-toastify\";\r\nimport SummaryApi from \"../../common\";\r\nimport {\r\n  isValidArabicChars,\r\n  isValidEnglishChars,\r\n  isValidFrenchChars,\r\n} from \"../../helpers/checkLanguages\";\r\nimport SubmitBtn from \"../ui/SubmitBtn\";\r\nimport AdminInput from \"./AdminInput\";\r\nimport UploadImages from \"./UploadImages\";\r\n\r\nfunction AddSliderForm({ onSuccess }) {\r\n  const { t } = useTranslation();\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const imgRef = useRef(null);\r\n\r\n  async function uploadSliderImage() {\r\n    toast.warn(t(\"messages.warnUploadSliderImage\"));\r\n    try {\r\n      setIsUploading(true);\r\n      const formData = new FormData();\r\n      formData.append(\"sliderImg\", imgRef.current);\r\n\r\n      const req = await fetch(SummaryApi.uploadSliderImage.url, {\r\n        method: SummaryApi.uploadSliderImage.method,\r\n        body: formData,\r\n        credentials: \"include\",\r\n      });\r\n\r\n      const res = await req.json();\r\n      if (res.success) {\r\n        return res.imgPath;\r\n      } else {\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      toast.error(t(\"messages.errUploadSliderImage\"));\r\n    }\r\n  }\r\n\r\n  async function uploadSliderData(data) {\r\n    try {\r\n      const imgPath = await uploadSliderImage();\r\n      data.imgPath = imgPath;\r\n\r\n      const req = await fetch(SummaryApi.uploadSliderData.url, {\r\n        method: SummaryApi.uploadSliderData.method,\r\n        credentials: \"include\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      const res = await req.json();\r\n\r\n      if (res.success) {\r\n        toast.success(t(\"messages.successUploadSliderData\"));\r\n        onSuccess();\r\n      } else {\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      toast.error(t(\"messages.errUploadSliderData\"));\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  }\r\n\r\n  function modifyImgs(file, operation, index) {\r\n    switch (operation) {\r\n      case \"ADD\":\r\n        imgRef.current = file;\r\n        break;\r\n\r\n      case \"DELETE\":\r\n        imgRef.current = null;\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const finallData = {\r\n      title: [],\r\n      description: [],\r\n      imgPath: \"\",\r\n    };\r\n\r\n    let allTitleTranslation = 0;\r\n    let allDescTranslation = 0;\r\n\r\n    formData.entries().forEach((element) => {\r\n      if (element[0].startsWith(\"sliderTitle\")) {\r\n        // it must be 3 or -3 otherwise there is something different\r\n        allTitleTranslation += element[1].length !== 0 ? 1 : -1;\r\n        finallData.title.push({\r\n          language: element[0].slice(11).toLowerCase(),\r\n          text: element[1],\r\n        });\r\n      }\r\n      if (element[0].startsWith(\"description\")) {\r\n        allDescTranslation += element[1].length !== 0 ? 1 : -1;\r\n        finallData.description.push({\r\n          language: element[0].slice(11).toLowerCase(),\r\n          text: element[1],\r\n        });\r\n      }\r\n    });\r\n\r\n    if (Math.abs(allTitleTranslation) !== 3) {\r\n      toast.error(t(\"messages.errAddAllTranslationTitle\"));\r\n      return;\r\n    }\r\n\r\n    if (Math.abs(allDescTranslation) !== 3) {\r\n      toast.error(t(\"messages.errAddAllTranslationDesc\"));\r\n      return;\r\n    }\r\n\r\n    if (!imgRef.current) {\r\n      toast.error(t(\"messages.errSliderImage\"));\r\n      return;\r\n    }\r\n\r\n    uploadSliderData(finallData);\r\n  }\r\n\r\n  return (\r\n    <form className=\"pt-6 flex flex-col gap-2\" onSubmit={handleSubmit}>\r\n      <AdminInput\r\n        type=\"text\"\r\n        name=\"sliderTitleEN\"\r\n        id=\"sliderTitleEN\"\r\n        label={t(\"forms.admin.interpolationFields.title.label\", {\r\n          section: t(\"forms.admin.interpolationKeyword.slider\"),\r\n          lang: t(\"forms.admin.interpolationKeyword.en\"),\r\n        })}\r\n        placeholder={t(\"forms.admin.interpolationFields.title.placeholder\", {\r\n          section: t(\"forms.admin.interpolationKeyword.slider\"),\r\n          lang: t(\"forms.admin.interpolationKeyword.en\"),\r\n        })}\r\n        classes=\"p-2 bg-slate-100 border rounded disabled:cursor-not-allowed\"\r\n        disabled={isUploading}\r\n        sterilizer={(val) => {\r\n          if (!isValidEnglishChars(val, t)) {\r\n            return false;\r\n          }\r\n          if (val.length >= 100) {\r\n            toast.warn(t(\"messages.errTitleLong\"));\r\n            return false;\r\n          }\r\n          return true;\r\n        }}\r\n      />\r\n\r\n      <AdminInput\r\n        type=\"text\"\r\n        name=\"sliderTitleAR\"\r\n        id=\"sliderTitleAR\"\r\n        label={t(\"forms.admin.interpolationFields.title.label\", {\r\n          section: t(\"forms.admin.interpolationKeyword.slider\"),\r\n          lang: t(\"forms.admin.interpolationKeyword.ar\"),\r\n        })}\r\n        placeholder={t(\"forms.admin.interpolationFields.title.placeholder\", {\r\n          section: t(\"forms.admin.interpolationKeyword.slider\"),\r\n          lang: t(\"forms.admin.interpolationKeyword.ar\"),\r\n        })}\r\n        classes=\"p-2 bg-slate-100 border rounded disabled:cursor-not-allowed\"\r\n        disabled={isUploading}\r\n        sterilizer={(val) => {\r\n          if (!isValidArabicChars(val, t)) {\r\n            return false;\r\n          }\r\n          if (val.length >= 100) {\r\n            toast.warn(t(\"messages.errTitleLong\"));\r\n            return false;\r\n          }\r\n          return true;\r\n        }}\r\n      />\r\n\r\n      <AdminInput\r\n        type=\"text\"\r\n        name=\"sliderTitleFR\"\r\n        id=\"sliderTitleFR\"\r\n        label={t(\"forms.admin.interpolationFields.title.label\", {\r\n          section: t(\"forms.admin.interpolationKeyword.slider\"),\r\n          lang: t(\"forms.admin.interpolationKeyword.fr\"),\r\n        })}\r\n        placeholder={t(\"forms.admin.interpolationFields.title.placeholder\", {\r\n          section: t(\"forms.admin.interpolationKeyword.slider\"),\r\n          lang: t(\"forms.admin.interpolationKeyword.fr\"),\r\n        })}\r\n        classes=\"p-2 bg-slate-100 border rounded disabled:cursor-not-allowed\"\r\n        disabled={isUploading}\r\n        sterilizer={(val) => {\r\n          if (!isValidFrenchChars(val, t)) {\r\n            return false;\r\n          }\r\n          if (val.length >= 100) {\r\n            toast.warn(t(\"messages.errTitleLong\"));\r\n            return false;\r\n          }\r\n          return true;\r\n        }}\r\n      />\r\n\r\n      <AdminInput\r\n        type=\"textarea\"\r\n        id=\"descriptionEN\"\r\n        label={t(\"forms.admin.interpolationFields.description.label\", {\r\n          section: t(\"forms.admin.interpolationKeyword.slider\"),\r\n          lang: t(\"forms.admin.interpolationKeyword.en\"),\r\n        })}\r\n        placeholder={t(\r\n          \"forms.admin.interpolationFields.description.placeholder\",\r\n          {\r\n            section: t(\"forms.admin.interpolationKeyword.slider\"),\r\n            lang: t(\"forms.admin.interpolationKeyword.en\"),\r\n          }\r\n        )}\r\n        name=\"descriptionEN\"\r\n        classes=\"h-28 bg-slate-100 border resize-none p-1 disabled:cursor-not-allowed\"\r\n        rows={3}\r\n        disabled={isUploading}\r\n        sterilizer={(val) => {\r\n          if (!isValidEnglishChars(val, t)) {\r\n            return false;\r\n          }\r\n          return val.length <= 500;\r\n        }}\r\n      />\r\n\r\n      <AdminInput\r\n        type=\"textarea\"\r\n        id=\"descriptionAR\"\r\n        label={t(\"forms.admin.interpolationFields.description.label\", {\r\n          section: t(\"forms.admin.interpolationKeyword.slider\"),\r\n          lang: t(\"forms.admin.interpolationKeyword.ar\"),\r\n        })}\r\n        placeholder={t(\r\n          \"forms.admin.interpolationFields.description.placeholder\",\r\n          {\r\n            section: t(\"forms.admin.interpolationKeyword.slider\"),\r\n            lang: t(\"forms.admin.interpolationKeyword.ar\"),\r\n          }\r\n        )}\r\n        name=\"descriptionAR\"\r\n        classes=\"h-28 bg-slate-100 border resize-none p-1 disabled:cursor-not-allowed\"\r\n        rows={3}\r\n        disabled={isUploading}\r\n        sterilizer={(val) => {\r\n          if (!isValidArabicChars(val, t)) {\r\n            return false;\r\n          }\r\n          return val.length <= 500;\r\n        }}\r\n      />\r\n\r\n      <AdminInput\r\n        type=\"textarea\"\r\n        id=\"descriptionFR\"\r\n        label={t(\"forms.admin.interpolationFields.description.label\", {\r\n          section: t(\"forms.admin.interpolationKeyword.slider\"),\r\n          lang: t(\"forms.admin.interpolationKeyword.fr\"),\r\n        })}\r\n        placeholder={t(\r\n          \"forms.admin.interpolationFields.description.placeholder\",\r\n          {\r\n            section: t(\"forms.admin.interpolationKeyword.slider\"),\r\n            lang: t(\"forms.admin.interpolationKeyword.fr\"),\r\n          }\r\n        )}\r\n        name=\"descriptionFR\"\r\n        classes=\"h-28 bg-slate-100 border resize-none p-1 disabled:cursor-not-allowed\"\r\n        rows={3}\r\n        disabled={isUploading}\r\n        sterilizer={(val) => {\r\n          if (!isValidFrenchChars(val, t)) {\r\n            return false;\r\n          }\r\n          return val.length <= 500;\r\n        }}\r\n      />\r\n\r\n      <UploadImages\r\n        disabled={isUploading}\r\n        error={t(\"messages.errSliderImage\")}\r\n        label={t(\"forms.admin.imgsSliderField.label\")}\r\n        modifyImgs={modifyImgs}\r\n        multiple={false}\r\n      />\r\n\r\n      <SubmitBtn\r\n        title={t(\"forms.admin.uploadSliderBtn\")}\r\n        type=\"primary\"\r\n        classes=\"px-3 pt-2\"\r\n        dis={isUploading}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddSliderForm;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport { RotatingLines } from \"react-loader-spinner\";\r\nimport { toast } from \"react-toastify\";\r\nimport SummaryApi from \"../../common\";\r\nimport Confirm from \"../ui/Confirm\";\r\nimport DisplayImage from \"../ui/DisplayImage\";\r\nimport EmptyData from \"../ui/EmptyData\";\r\nimport ErrorComponent from \"../ui/ErrorComponent\";\r\nimport AddSliderForm from \"./AddSliderForm\";\r\nimport ModalWindow from \"./ModalWindow\";\r\nimport Upload from \"./Upload\";\r\n\r\nfunction SliderAdmin() {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [err, setErr] = useState(false);\r\n  const [showAddSlider, setShowAddSlider] = useState(false);\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [showImage, setShowImage] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const { t } = useTranslation();\r\n\r\n  const sliderDelete = useRef(null);\r\n  const sliderImage = useRef(null);\r\n\r\n  async function fetchSliderData() {\r\n    try {\r\n      setIsLoading(true);\r\n\r\n      const req = await fetch(SummaryApi.getSliderData.url, {\r\n        method: SummaryApi.getSliderData.method,\r\n      });\r\n\r\n      const res = await req.json();\r\n      if (res.success) {\r\n        setData(res.data);\r\n      } else {\r\n        throw new Error(res.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err.message);\r\n      setErr(true);\r\n      toast.error(t(\"message.errGetSlider\"));\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  }\r\n\r\n  async function deleteSliderData() {\r\n    try {\r\n      const req = await fetch(\r\n        `${SummaryApi.deleteSlider.url}/${sliderDelete.current}`,\r\n        {\r\n          method: SummaryApi.deleteSlider.method,\r\n          credentials: \"include\",\r\n        }\r\n      );\r\n\r\n      const res = await req.json();\r\n      if (res.success) {\r\n        toast.success(t(\"messages.successDeleteSlider\"));\r\n        fetchSliderData();\r\n      } else {\r\n        throw new Error(\"Something went wrong\");\r\n      }\r\n    } catch (err) {\r\n      toast.error(t(\"messages.errDeleteSlider\"));\r\n      console.log(err.message);\r\n    } finally {\r\n      sliderDelete.current = null;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchSliderData();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"bg-white pb-4\">\r\n        <div className=\"flex items-center justify-center\">\r\n          <RotatingLines strokeColor=\"#c89329\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (err) {\r\n    return (\r\n      <div className=\"p-4 w-full h-full\">\r\n        <ErrorComponent refetchFunction={fetchSliderData} disable={isLoading} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white pb-4\">\r\n      <Upload\r\n        buttonTitle={t(\"forms.admin.uploadBtnSliderOpen\")}\r\n        title={t(\"forms.admin.uploadSliderTitle\")}\r\n        hanldeClick={() => setShowAddSlider(true)}\r\n      />\r\n      {data.length ? (\r\n        <table className=\"w-full userTable\">\r\n          <thead>\r\n            <tr className=\"bg-primary-700 text-white\">\r\n              <th className=\"p-2\">{t(\"tables.common.titleEN\")}</th>\r\n              <th className=\"p-2\">{t(\"tables.common.titleAR\")}</th>\r\n              <th className=\"p-2\">{t(\"tables.common.titleFR\")}</th>\r\n              <th className=\"p-2\">{t(\"tables.common.descEN\")}</th>\r\n              <th className=\"p-2\">{t(\"tables.common.descAR\")}</th>\r\n              <th className=\"p-2\">{t(\"tables.common.descFR\")}</th>\r\n              <th className=\"p-2\">{t(\"tables.common.image\")}</th>\r\n              <th className=\"p-2\">{t(\"tables.common.action\")}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data.map((el, index) => {\r\n              return (\r\n                <tr key={el._id}>\r\n                  {el.title.map((item) => (\r\n                    <td key={item._id} className=\"p-2\">\r\n                      {item.text}\r\n                    </td>\r\n                  ))}\r\n\r\n                  {el.description.map((item) => (\r\n                    <td key={item._id} className=\"p-2\">\r\n                      {item.text}\r\n                    </td>\r\n                  ))}\r\n\r\n                  <td className=\"p-2\">\r\n                    <span\r\n                      className=\"underline text-blue-700 cursor-pointer\"\r\n                      onClick={() => {\r\n                        sliderImage.current = el.img;\r\n                        setShowImage(true);\r\n                      }}\r\n                    >\r\n                      {t(\"tables.common.image\")}\r\n                    </span>\r\n                  </td>\r\n                  <td className=\"p-2\">\r\n                    <button\r\n                      className=\"bg-red-100 p-2 rounded-full cursor-pointer transition-colors hover:bg-red-500 hover:text-white\"\r\n                      onClick={() => {\r\n                        sliderDelete.current = el._id;\r\n                        setShowConfirm(true);\r\n                      }}\r\n                    >\r\n                      <MdDelete />\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      ) : (\r\n        <EmptyData />\r\n      )}\r\n\r\n      {showAddSlider && (\r\n        <ModalWindow onClose={() => setShowAddSlider(false)}>\r\n          <AddSliderForm\r\n            onSuccess={() => {\r\n              setShowAddSlider(false);\r\n              fetchSliderData();\r\n            }}\r\n          />\r\n        </ModalWindow>\r\n      )}\r\n\r\n      {showConfirm && (\r\n        <Confirm\r\n          about={t(\"messages.confirmDeleteSlider\")}\r\n          onClose={() => setShowConfirm(false)}\r\n          onConfirm={() => {\r\n            deleteSliderData();\r\n            setShowConfirm(false);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {showImage &&\r\n        createPortal(\r\n          <DisplayImage\r\n            onClose={() => {\r\n              setShowImage(false);\r\n              sliderImage.current = null;\r\n            }}\r\n            imgUrl={sliderImage.current}\r\n          />,\r\n          document.body\r\n        )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SliderAdmin;\r\n","function Upload({ buttonTitle, title, hanldeClick }) {\r\n  return (\r\n    <div className=\"bg-white py-2 px-4 flex justify-between items-center\">\r\n      <h2 className=\"font-bold text-lg\">{title}</h2>\r\n      <button\r\n        className=\"border-2 bg-primary-700 text-white transition-all py-1 px-3 rounded-full \"\r\n        onClick={() => hanldeClick?.()}\r\n      >\r\n        {buttonTitle}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n","import { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport { toast } from \"react-toastify\";\r\nimport DisplayImage from \"../ui/DisplayImage\";\r\n\r\nfunction UploadImages({ modifyImgs, label, error, disabled, multiple = true }) {\r\n  const { t } = useTranslation();\r\n  const [data, setData] = useState([]);\r\n  const [openFullScreenImage, setOpenFullScreenImage] = useState(false);\r\n  const [fullScreenImage, setFullScreenImage] = useState(\"\");\r\n  const [dragableClass, setDragableClass] = useState(\"\");\r\n\r\n  function handleSetImages(e, imgs) {\r\n    if (disabled) return;\r\n\r\n    if (imgs) {\r\n      imgs.forEach((file) => {\r\n        // Ignore big image\r\n        if (file.size > 5 * 1024 * 1024) {\r\n          toast.error(error);\r\n          return;\r\n        }\r\n        modifyImgs?.(file, \"ADD\", null);\r\n        const reader = new FileReader();\r\n        reader.onload = function (event) {\r\n          const previewImageUrl = event.target.result;\r\n          if(multiple)\r\n            setData((previousImgs) => [...previousImgs, previewImageUrl]);\r\n          else\r\n            setData([previewImageUrl])\r\n        };\r\n        reader.readAsDataURL(file); // Read file as data URL\r\n      });\r\n    } else if (e) {\r\n      [...e.target.files].forEach((file) => {\r\n        // Ignore big image\r\n        if (file.size > 5 * 1024 * 1024) {\r\n          toast.error(error);\r\n          return;\r\n        }\r\n        modifyImgs?.(file, \"ADD\", null);\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = function (event) {\r\n          const previewImageUrl = event.target.result;\r\n          if(multiple)\r\n            setData((previousImgs) => [...previousImgs, previewImageUrl]);\r\n          else\r\n            setData([previewImageUrl])\r\n        };\r\n        reader.readAsDataURL(file); // Read file as data URL\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleDeleteProductImage(index) {\r\n    if (disabled) return;\r\n\r\n    if (multiple)\r\n      setData((previouseImgs) => previouseImgs.filter((_, i) => i !== index));\r\n    else\r\n      setData([])\r\n    modifyImgs?.(null, \"DELETE\", index);\r\n  }\r\n\r\n  function handleDragOver(e) {\r\n    if (disabled) return;\r\n\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    setDragableClass(\"border-[4px] border-dashed border-stone-700\");\r\n  }\r\n\r\n  function handleDragLeave(e) {\r\n    if (disabled) return;\r\n\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n\r\n    setDragableClass(\"\");\r\n  }\r\n\r\n  function handleDropFiles(e) {\r\n    if (disabled) return;\r\n\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    let files = [];\r\n    // Loop through the files and pick the first image if not multiple\r\n    for (const file of e.dataTransfer.files) {\r\n      if (/^(image)/.test(file.type)) {\r\n        files.push(file);\r\n        if (!multiple) break; // Exit the loop after finding the first image\r\n      }\r\n    }\r\n    // Only images\r\n    // const imgs = files.filter((file) => /^(image)/.test(file.type));\r\n    handleSetImages(null, files);\r\n    setDragableClass(\"\");\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <label htmlFor=\"productImage\" className=\"mt-3\">\r\n        {label}\r\n      </label>\r\n      <label\r\n        htmlFor=\"uploadImageInput\"\r\n        className={dragableClass}\r\n        onDragOverCapture={handleDragOver}\r\n        onDragLeaveCapture={handleDragLeave}\r\n        onDragEnterCapture={handleDragOver}\r\n        onDropCapture={handleDropFiles}\r\n      >\r\n        <div className=\"p-2 bg-slate-100 border rounded h-32 w-full flex justify-center items-center cursor-pointer\">\r\n          <div className=\"text-slate-500 flex justify-center items-center flex-col gap-2\">\r\n            <span className=\"text-4xl\">\r\n              <FaCloudUploadAlt />\r\n            </span>\r\n            <p className=\"text-sm\">{t(\"forms.admin.imagesField.label\")}</p>\r\n            <input\r\n              disabled={disabled}\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              id=\"uploadImageInput\"\r\n              className=\"hidden\"\r\n              onChange={handleSetImages}\r\n              multiple={multiple}\r\n            />\r\n          </div>\r\n        </div>\r\n      </label>\r\n      <div>\r\n        {data[0] ? (\r\n          <div className=\"flex items-center gap-2 w-full overflow-y-auto max-h-[20rem] flex-wrap\">\r\n            {data[0] &&\r\n              data.map((url, index) => {\r\n                if (url)\r\n                  return (\r\n                    <div\r\n                      key={url}\r\n                      className=\"relative group basis-[calc(50%-0.5rem)]\"\r\n                    >\r\n                      <img\r\n                        src={url}\r\n                        alt=\"product\"\r\n                        className=\"bg-slate-100 object-cover border-[3px] border-stone-500 cursor-pointer\"\r\n                        onClick={() => {\r\n                          setOpenFullScreenImage(true);\r\n                          setFullScreenImage(url);\r\n                        }}\r\n                      />\r\n\r\n                      <div\r\n                        className=\"absolute bottom-0 right-0 p-1 text-white bg-red-600 rounded-full hidden group-hover:block cursor-pointer\"\r\n                        onClick={() => handleDeleteProductImage?.(index)}\r\n                      >\r\n                        <MdDelete />\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                else\r\n                  return (\r\n                    <div\r\n                      key={index}\r\n                      className=\"relative group basis-[calc(50%-0.5rem)] h-[10rem] bg-gray-500 animate-pulse\"\r\n                    />\r\n                  );\r\n              })}\r\n          </div>\r\n        ) : (\r\n          <p className=\"text-red-600 text-xs\">{error}</p>\r\n        )}\r\n      </div>\r\n\r\n      {/***display image full screen */}\r\n      {openFullScreenImage && (\r\n        <DisplayImage\r\n          onClose={() => setOpenFullScreenImage(false)}\r\n          imgUrl={fullScreenImage}\r\n          classes=\"mt-[3rem]\"\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UploadImages;\r\n","import { createPortal } from \"react-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { CgClose } from \"react-icons/cg\";\r\nimport { useOutsideClick } from \"../../hooks/useOutsideClick\";\r\nimport SubmitBtn from \"./SubmitBtn\";\r\n\r\nfunction Confirm({ about, onConfirm, onClose, moreDetails = true, children }) {\r\n  const { t } = useTranslation();\r\n  const eleRef = useOutsideClick(() => {\r\n    onClose?.();\r\n  });\r\n\r\n  return createPortal(\r\n    <div className=\"fixed inset-0 flex justify-center items-center z-50 backdrop-brightness-75\">\r\n      <div\r\n        className=\"bg-white shadow-lg rounded max-w-5xl mx-auto p-4 overflow-auto\"\r\n        ref={eleRef}\r\n      >\r\n        <div\r\n          className=\"w-fit ml-auto text-2xl hover:text-red-600 cursor-pointer\"\r\n          onClick={() => onClose?.()}\r\n        >\r\n          <CgClose />\r\n        </div>\r\n\r\n        <div className=\"flex justify-center gap-5 flex-col p-4 max-w-[80dvh] max-h-[80dvh] object-cover\">\r\n          <h3 className=\"text-lg font-semibold\">\r\n            {`${t(\"messages.confirmQuestion1\")} ${about} ${\r\n              moreDetails ?t(\"messages.confirmQuestion2\"): \"\"\r\n            }`}\r\n          </h3>\r\n\r\n          {children ? children : null}\r\n\r\n          <div className=\"flex items-center justify-between p-1\">\r\n            <SubmitBtn\r\n              title={t(\"messages.yes\")}\r\n              type=\"danger\"\r\n              handleClick={() => onConfirm?.()}\r\n              classes=\"w-[49%] font-semibold text-lg\"\r\n            />\r\n            <SubmitBtn\r\n              title={t(\"messages.no\")}\r\n              handleClick={() => onClose?.()}\r\n              classes=\"w-[49%] font-semibold text-lg\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n}\r\n\r\nexport default Confirm;\r\n","import React from \"react\";\nimport { CgClose } from \"react-icons/cg\";\nimport { useOutsideClick } from \"../../hooks/useOutsideClick\";\n\nconst DisplayImage = ({ imgUrl, onClose, classes = \"\" }) => {\n  const eleRef = useOutsideClick((e) => {\n    onClose?.();\n  });\n  return (\n    <div\n      className={`fixed inset-0 flex justify-center items-center z-50 backdrop-brightness-75 ${\n        classes !== \"\" ? classes : \"\"\n      }`}\n    >\n      <div\n        className=\"bg-white shadow-lg rounded max-w-5xl mx-auto p-4 overflow-auto\"\n        ref={eleRef}\n      >\n        <div\n          className=\"w-fit ml-auto text-2xl hover:text-red-600 cursor-pointer\"\n          onClick={onClose}\n        >\n          <CgClose />\n        </div>\n\n        <div className=\"flex justify-center p-4 max-w-[80dvh] max-h-[80dvh] object-cover\">\n          <img src={imgUrl} alt=\"img\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DisplayImage;\n","import { useTranslation } from \"react-i18next\";\r\n\r\nfunction EmptyData() {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <p className=\"w-[80%] mx-auto my-2 rounded-lg p-4 text-xl bg-[var(--primary-color-200)] text-[var(--primary-color-1100)]\">\r\n      {t(\"messages.warnNoData\")}\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default EmptyData;\r\n","import { useTranslation } from \"react-i18next\";\r\nimport { FaTriangleExclamation } from \"react-icons/fa6\";\r\n\r\nfunction ErrorComponent({ refetchFunction, disable }) {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <div className=\"bg-red-200 rounded-lg p-3\">\r\n      <div className=\"bg-gradient-to-bl mb-3 flex items-center flex-wrap gap-4\">\r\n        <p className=\"text-2xl text-red-500 \">\r\n          {t(\"messages.genericErr.title\")}\r\n        </p>\r\n        <FaTriangleExclamation className=\"text-4xl text-red-500\" />\r\n      </div>\r\n\r\n      {refetchFunction ? (\r\n        <p\r\n          className={`text-red-500 underline transition-colors cursor-pointer hover:text-red-800 ${\r\n            disable ? \"pointer-events-none cursor-not-allowed\" : \"\"\r\n          }`}\r\n          onClick={() => refetchFunction?.()}\r\n        >\r\n          {t(\"messages.genericErr.btnTitle\")}\r\n        </p>\r\n      ) : null}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorComponent;\r\n","function SubmitBtn({ type = \"primary\", title, dis, classes, handleClick }) {\r\n  let colorClasses = \"\";\r\n  switch (type) {\r\n    case \"danger\":\r\n      colorClasses = \"bg-red-500 hover:bg-red-600\";\r\n      break;\r\n    default:\r\n      colorClasses = \"bg-[var(--primary-color-900)] hover:bg-[var(--primary-color-1100)]\";\r\n  }\r\n\r\n  return (\r\n    <button\r\n      className={`text-slate-50 border-none outline-none rounded-lg p-2 transition-colors disabled:cursor-not-allowed ${colorClasses} ${classes}`}\r\n      onClick={(e) => handleClick?.(e)}\r\n      disabled={dis}\r\n    >\r\n      {title}\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default SubmitBtn;\r\n","import { toast } from \"react-toastify\";\r\n\r\nexport function isValidEnglishChars(val, t) {\r\n  if (!/^[a-zA-Z\\d\\s.,'\";]+$/.test(val) & (val !== \"\")) {\r\n    toast.warn(t(\"messages.errOnlyEnglish\"));\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function isValidArabicChars(val, t) {\r\n  // See the not !, match anything except arabic, nubmers and whitespace chars\r\n  // empty string => first is false -> 0 and empty string -> 1 then 0. && willn't work\r\n  if (!/^[\\u0600-\\u06FF\\s\\d،.,'\";]+$/.test(val) & (val !== \"\")) {\r\n    toast.warn(t(\"messages.errOnlyArabic\"));\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function isValidFrenchChars(val, t) {\r\n  if (!/^[A-Za-zÀ-ÿ\\s\\d'.,'\";]+$/.test(val) & (val !== \"\")) {\r\n    toast.warn(t(\"messages.errOnlyFrench\"));\r\n    return false;\r\n  }\r\n  return true;\r\n}"],"names":["_ref","type","name","id","label","defaultValue","classes","placeholder","required","sterilizer","disabled","value","setValue","useState","hanldeChangeInput","e","target","_jsxs","_Fragment","children","_jsx","htmlFor","onChange","className","title","onClose","ref","useOutsideClick","closest","concat","onClick","CgClose","onSuccess","t","useTranslation","isUploading","setIsUploading","imgRef","useRef","async","uploadSliderData","data","imgPath","toast","warn","formData","FormData","append","current","req","fetch","SummaryApi","uploadSliderImage","url","method","body","credentials","res","json","success","Error","err","console","log","message","error","headers","JSON","stringify","onSubmit","preventDefault","finallData","description","allTitleTranslation","allDescTranslation","entries","forEach","element","startsWith","length","push","language","slice","toLowerCase","text","Math","abs","AdminInput","section","lang","val","isValidEnglishChars","isValidArabicChars","isValidFrenchChars","rows","UploadImages","modifyImgs","file","operation","index","multiple","SubmitBtn","dis","isLoading","setIsLoading","setErr","showAddSlider","setShowAddSlider","showConfirm","setShowConfirm","showImage","setShowImage","setData","sliderDelete","sliderImage","fetchSliderData","getSliderData","useEffect","RotatingLines","strokeColor","ErrorComponent","refetchFunction","disable","Upload","buttonTitle","hanldeClick","map","el","item","_id","img","MdDelete","EmptyData","ModalWindow","AddSliderForm","Confirm","about","onConfirm","deleteSlider","deleteSliderData","createPortal","DisplayImage","imgUrl","document","openFullScreenImage","setOpenFullScreenImage","fullScreenImage","setFullScreenImage","dragableClass","setDragableClass","handleSetImages","imgs","size","reader","FileReader","onload","event","previewImageUrl","result","previousImgs","readAsDataURL","files","handleDeleteProductImage","previouseImgs","filter","_","i","handleDragOver","stopPropagation","onDragOverCapture","onDragLeaveCapture","onDragEnterCapture","onDropCapture","dataTransfer","test","FaCloudUploadAlt","accept","src","alt","moreDetails","eleRef","handleClick","FaTriangleExclamation","colorClasses"],"sourceRoot":""}